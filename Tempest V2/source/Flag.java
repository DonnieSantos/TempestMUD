import java.util.*;
import java.io.*;

public class Flag implements Externalizable, Cloneable

{
  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  private static final long serialVersionUID = 16;

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  private boolean enabled;
  private String name;

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public boolean isEnabled() { return enabled;     }
  public String getName()    { return name;        }
  public void toggleFlag()   { enabled = !enabled; }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public Flag()

  {
    enabled = false;
    name = "Flag";
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public Flag(String s, boolean b)

  {
    name = s;
    enabled = b;
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public Flag replicate()

  {
    try { return (Flag)clone(); }
    catch (Exception e) { return new Flag(new String(name), enabled); }
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public boolean isSame(String s)

  {
    if (s.equalsIgnoreCase(name))
      return true;

    return false;
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public static boolean toggleFlag(Flag[] flagList, String s)

  {
    int size = flagList.length;

    for (int i=0; i<size; i++)
    if (flagList[i].isSame(s))

    {
      flagList[i].toggleFlag();
      return true;
    }

    return false;
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public static int flagCount(Flag[] flagList)

  {
    int size = flagList.length;
    int count = 0;

    for (int i=0; i<size; i++)
    if (flagList[i].isEnabled())
      count++;

    return count;
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public static void setFlags(Flag[] oldList, Flag[] newList)

  {
    int size = newList.length;
    int oldSize = oldList.length;

    for (int i=0; i<size; i++)
    for (int j=0; j<oldSize; j++)
      if (oldList[j].isSame(newList[i].getName()))
      if (oldList[j].isEnabled())
        newList[i].toggleFlag();
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public void readExternal(ObjectInput in)

  {
    try

    {
      String tag = "";

      while (!tag.equals("FLAG END"))

      {
        tag = (String)in.readObject();

        if (tag.equals("ENABLED"))   enabled = ((Boolean)in.readObject()).booleanValue();
        else if (tag.equals("NAME")) name    = (String)in.readObject();
        else if (!tag.equals("FLAG END")) in.readObject();
      }
    }

    catch (Exception e) { e.printStackTrace(); }
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////

  public void writeExternal(ObjectOutput out)

  {
    try

    {
      out.writeObject("ENABLED"); out.writeObject(new Boolean(enabled));
      out.writeObject("NAME");    out.writeObject(name);
      out.writeObject("FLAG END");
    }

    catch (Exception e) { e.printStackTrace(); }
  }

  //////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////
}